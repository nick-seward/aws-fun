AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Setup a VPC in the Canada Central region. You get the following setup for you,

  1. Creates 3 subnets (Public, Private, Data) in each AZ. 
  2. Creates 3 Network ACL's that deny all traffic be default. There's a NACL for each of the 3 Subnets. 
  3. 2 route tables are created per AZ, 1 that acts as the default and the other for the public subnet.
  4. An Internet Gateway is created, attached to the VPC and a route entry is added to the public route table for each AZ
  5. A NAT Gateway in each public subnet with a route entry in each private main route table

  The CIDR is hardcoded to 192.168.0.0/22

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 192.168.0.0/22
      Tags:
        - Key: Name
          Value: !Ref "AWS::StackName"
  
  # --- Internet Gateway ---
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, igw]]
  
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  
  # --- NAT Gateways ---
  NATAZ1:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId:
         Fn::GetAtt:
         - NATEIPAZ1
         - AllocationId
      SubnetId: !Ref PublicSubnetAZ1
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, natgw-az1]]

  NATEIPAZ1:
    DependsOn: AttachIGW
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  
  NATAZ2:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId:
         Fn::GetAtt:
         - NATEIPAZ2
         - AllocationId
      SubnetId: !Ref PublicSubnetAZ2
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, natgw-az2]]

  NATEIPAZ2:
    DependsOn: AttachIGW
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      

  # --- Route Tables ---
  MainRouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, main-route-az1]]
  
  MainRouteTableAZ2:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, main-route-az2]]
  
  NATRouteAZ1:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref MainRouteTableAZ1
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref NATAZ1
  
  NATRouteAZ2:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref MainRouteTableAZ2
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref NATAZ2
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, public-route]]
  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
       RouteTableId: !Ref PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref IGW

  # --- Network ACLs ---
  DataNACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      Tags: 
        - Key: Name
          Value: !Join ["-", [!Ref VPC, data-nacl]]
      VpcId: !Ref VPC

  PrivateNACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      Tags: 
        - Key: Name
          Value: !Join ["-", [!Ref VPC, private-nacl]]
      VpcId: !Ref VPC
  
  PublicNACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      Tags: 
        - Key: Name
          Value: !Join ["-", [!Ref VPC, public-nacl]]
      VpcId: !Ref VPC

  # --- Public Subnet AZ1 ---
  PublicSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: 192.168.0.1/26
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, public-az1]]

  PublicSubnetRouteTableAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAZ1
  
  PublicSubnetNACLAZ1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref PublicNACL
      SubnetId: !Ref PublicSubnetAZ1

  # --- Private Subnet AZ1 ---
  PrivateSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: 192.168.0.64/26
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, private-az1]]

  PrivateSubnetRouteTableAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref MainRouteTableAZ1
      SubnetId: !Ref PrivateSubnetAZ1

  PrivateSubnetNACLAZ1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref PrivateNACL
      SubnetId: !Ref PrivateSubnetAZ1
      
  # --- Data Subnet AZ1 ---
  DataSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: 192.168.0.128/26
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, data-az1]]

  DataSubnetRouteTableAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref MainRouteTableAZ1
      SubnetId: !Ref DataSubnetAZ1

  DataSubnetNACLAZ1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref DataNACL
      SubnetId: !Ref DataSubnetAZ1

  # --- Public Subnet AZ2 ---
  PublicSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: 192.168.1.0/26
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, public-az2]]

  PublicSubnetRouteTableAZ2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAZ2
  
  PublicSubnetNACLAZ2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref PublicNACL
      SubnetId: !Ref PublicSubnetAZ2

  # --- Private Subnet AZ2 ---
  PrivateSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: 192.168.1.64/26
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, private-az2]]
  
  PrivateSubneRouteTableAZ2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref MainRouteTableAZ2
      SubnetId: !Ref PrivateSubnetAZ2

  PrivateSubnetNACLAZ2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref PrivateNACL
      SubnetId: !Ref PrivateSubnetAZ2
 
  # --- Data Subnet AZ2 ---
  DataSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: 192.168.1.128/26
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VPC, data-az2]]

  DataSubnetRouteTableAZ2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref MainRouteTableAZ2
      SubnetId: !Ref DataSubnetAZ2
  
  DataSubnetNACLAZ2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref DataNACL
      SubnetId: !Ref DataSubnetAZ2

Outputs:
  VPC:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'id']]
  
  VPCCIDR:
    Description: VPC CIDR Range
    Value: 192.168.0.0/22
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'cidr']]

  PublicSubnetAZ1:
    Description: Public Subnet ID in AZ1
    Value: !Ref PublicSubnetAZ1
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'public-subnet-az1', 'id']]
  
  PrivateSubnetAZ1:
    Description: Private Subnet ID in AZ1
    Value: !Ref PrivateSubnetAZ1
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'private-subnet-az1', 'id']]
  
  DataSubnetAZ1:
    Description: Data Subnet ID in AZ1
    Value: !Ref DataSubnetAZ1
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'data-subnet-az1', 'id']]

  PublicSubnetAZ2:
    Description: Public Subnet ID in AZ2
    Value: !Ref PublicSubnetAZ2
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'public-subnet-az2', 'id']]
  
  PrivateSubnetAZ2:
    Description: Private Subnet ID in AZ2
    Value: !Ref PrivateSubnetAZ2
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'private-subnet-az2', 'id']]
  
  DataSubnetAZ2:
    Description: Data Subnet ID in AZ2
    Value: !Ref DataSubnetAZ2
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'data-subnet-az2', 'id']]
  
  PublicNACL:
    Description: Public Network ACL
    Value: !Ref PublicNACL
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'public-nacl', 'id']]
  
  PrivateNACL:
    Description: Private Network ACL
    Value: !Ref PrivateNACL
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'private-nacl', 'id']]

  DataNACL:
    Description: Data Network ACL
    Value: !Ref DataNACL
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", 'data-nacl', 'id']]
  